#!/usr/bin/env bash

# Настройки бэкапа конкретного проекта.
# На этой стадии в окружении определены
# CONFIG_BASEDIR - Путь к этому конфигу (без финального /)
# CONFIG_FILE - Путь+имя файла этого конфига

#### [global]
# Datetime values (текущая дата, день начала недели и текущий день)
export NOW=`date '+%F-%H-%M-%S'`
export NOW_DOW=`date '+%u'`
export NOW_DAY=`date '+%d'`

#### --------------------------------------------------------------------------------
#### Общие настройки
#### --------------------------------------------------------------------------------
#### [common]

# Временный каталог
export TEMP_PATH=/tmp

# Используемый архиватор. Варианты zip (будет использован pigz) или rar.
# Актуально для секции database, для archive всегда используется rar
export USE_ARCHIVER=rar

# файл лога. Не используется.
export LOG_FILE=/var/log/kwbackup.log

#### --------------------------------------------------------------------------------
#### Настройки RCLONE
#### --------------------------------------------------------------------------------
#### [rclone]

# путь к конфигу RCLONE. Если рядом со скриптом kwbackup.sh будет лежать файл rclone.conf - будет использован он.
export RCLONE_CONFIG=${CONFIG_BASEDIR}/rclone.conf

# Используемый провайдер подключения (то, что указывается в [] в rclone.conf)
export RCLONE_PROVIDER=XXX

#### --------------------------------------------------------------------------------
#### Настройки бэкапа баз данных (алгоритм DUMP + ZIP + COPY)
#### --------------------------------------------------------------------------------
#### [database]

# Разрешить ли бэкап БД по сценарию dump, zip and copy (with delete old) (допустимо 0 или 1, отсутствие эквивалентно 0)
export ENABLE_BACKUP_DATABASE=1

# MySQL HOST (user & password must be declared at ~/.my.cnf file - скорее всего в /root/ - от кого выполняются крон-задачи бэкапа?)
export MYSQL_HOST=localhost

# Backup sources: Databases.
# NB: Если бэкапим одну БД - пишем так:
export DATABASES=test
# NB: Если несколько баз - то пишем через массив. В этом случае в контейнере будет создана подпапка для каждой базы (а внутри DAILY/WEEKLY etc)
export DATABASES=( test1 test2 )

# Делать ли ежедневные, еженедельные и ежемесячные копии? (0|1)
export DB_BACKUP_DAILY=1
export DB_BACKUP_WEEKLY=1
export DB_BACKUP_MONTHLY=1

# Minimal age interval for daily/weekly/monthly backups (7 days, 7*6+1 days, 30*12 days)
export DB_MIN_AGE_DAILY=7d
export DB_MIN_AGE_WEEKLY=43d
export DB_MIN_AGE_MONTHLY=360d

# Целевой контейнер для хранения бэкапов БД.
# Vожно указать не просто имя контейнера, но и контейнер+путь внутри, например EXAMPLE/STORAGE, это корректный вариант
export CLOUD_CONTAINER_DB="EXAMPLE/DB"

# [ОПЦИОНАЛЬНО, не реализовано], ключи сжатия для архиватора RAR
# export DATABASE_RAR_OPTIONS="-m5 -mde"

#### --------------------------------------------------------------------------------
#### Настройки бэкапа STORAGE (алгоритм SYNC)
#### --------------------------------------------------------------------------------
#### [storage]

# Разрешить ли бэкап файлового storage по схеме sync (допустимо 0 или 1, отсутствие эквивалентно 0)
export ENABLE_BACKUP_STORAGE=0

# "Корень" для источника данных [ОПЦИОНАЛЬНО]
export STORAGE_SOURCES_ROOT=/srv/LIBDB.Storage/

# Источники данных для storage. Строка или массив строк ( /tmp/1/ /tmp/2/ )
# Полные пути или подкаталоги, если определен STORAGE_SOURCES_ROOT
export STORAGE_SOURCES=(
    files.aait
    files.etks
    files.hait
)

# Контейнер для STORAGE
export CLOUD_CONTAINER_STORAGE="EXAMPLE/STORAGE"

# Алгоритм бэкапа: sync или copy
export STORAGE_BACKUP_ALGO="sync"

#### --------------------------------------------------------------------------------
#### Настройки бэкапа ФАЙЛОВОГО АРХИВА (алгоритм PACK, SYNC)  (допустимо 0 или 1, отсутствие эквивалентно 0)
#### --------------------------------------------------------------------------------
#### [archive]

# Разрешить ли бэкап архива файлов по списку с исключением файлов из списка (схема: PACK + SYNC)
export ENABLE_BACKUP_ARCHIVE=0

# Списки файлов (include & exclude) для архиватора RAR
export RARFILES_INCLUDE_LIST=${CONFIG_BASEDIR}/rarfiles-include.conf
export RARFILES_EXCLUDE_LIST=${CONFIG_BASEDIR}/rarfiles-exclude.conf

# Имя архива для бэкапа
export FILENAME_RAR=livemap_${NOW}.rar

# Контейнер для бэкапа файлов
export CLOUD_CONTAINER_ARCHIVE="LIVEMAP_FILES"

# Алгоритм бэкапа: copy или sync
export ARCHIVE_BACKUP_ALGO="copy"

# [ОПЦИОНАЛЬНО, не реализовано], ключи сжатия для архиватора RAR
export ARCHIVE_RAR_OPTIONS="-r -s -m3 -mdc"

#### --------------------------------------------------------------------------------
#### КОНЕЦ
#### --------------------------------------------------------------------------------
#### [end]